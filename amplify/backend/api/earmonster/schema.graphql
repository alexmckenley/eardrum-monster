type User
  @model
  @key(fields: ["userID"])
{
  userID: String!
  latestEvent: AWSTimestamp
  songEvents: [SongEvent] @connection(keyName: "byUser", fields: ["userID"])
}

type SongEvent
  @model(subscriptions: null)
  @key(name: "byUser", fields: ["userID", "timestamp"], queryField: "songEventsByUserID")
  @key(name: "byType", fields: ["type", "timestamp"], queryField: "songEventsByType") {
  id: ID!
  spotifyURI: String!
  timestamp: AWSTimestamp!
  position: Int!
  track: Track @connection(fields: ["spotifyURI"])
  userID: String!
  user: User @connection(fields: ["userID"])
  type: String!
}

type Track @model @key(fields: ["uri"]) {
  uri: String!
  trackID: String
  name: String
  durationMs: Int
  albumName: String
  artistName: String
  albumImg: String
}

type Subscription {
  onCreateSongEvent(userID: String!): SongEvent @aws_subscribe(mutations: ["createSongEvent"])
}
